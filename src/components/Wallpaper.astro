---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

interface Props {
  wallpapers: ImageMetadata[];
}

const { wallpapers }: Props = Astro.props;
---

<input data-nosnippet type="checkbox" id="show-wallpaper" />
<label for="show-wallpaper" id="show-wallpaper-lbl"
  ><div data-nosnippet>Показать <strong>Модель</strong><b>Сайт</b></div>
</label>
<div data-nosnippet id="wallpaper" class="wallpaper">
  {
    wallpapers.map((wallpaper, ix) => {
      return (
        <picture class={ix === 0 ? "active" : ""}>
          <source srcset={wallpaper.src} type="image/webp" />
          <Image src={wallpaper} alt="wallpaper" class="wallpaper-image" />
        </picture>
      );
    })
  }
</div>
<script>
  (function wallpaper() {
    const wallpaper = document.querySelector("#wallpaper") as HTMLElement;
    const firstPicture = document.querySelector(
      "#wallpaper picture:first-child"
    ) as HTMLElement;

    wallpaper.addEventListener("animationiteration", (_e) => {
      const activePicture = document.querySelector(
        "#wallpaper picture.active"
      ) as HTMLSourceElement;

      const nextAfterActivePicture =
        activePicture.nextElementSibling as HTMLSourceElement;
      const nextPicture = nextAfterActivePicture || firstPicture;

      activePicture.classList.remove("active");
      nextPicture.classList.add("active");
    });
  })();
</script>

<style is:global>
  /* Wallpaper - is:global needed for hiding page content */
  #show-wallpaper {
    display: none;
  }

  #show-wallpaper:checked + #show-wallpaper-lbl b {
    display: inline;
  }

  #show-wallpaper:checked + #show-wallpaper-lbl strong {
    display: none;
  }

  #show-wallpaper-lbl {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 30;
    cursor: pointer;
  }

  #show-wallpaper-lbl div {
    background-color: var(--bg-color-opacity);
  }

  #show-wallpaper:checked ~ #main-holder {
    display: none;
  }

  #show-wallpaper-lbl:hover ~ #main-holder {
    opacity: 0.4;
  }

  #show-wallpaper-lbl b {
    display: none;
  }

  .wallpaper {
    background-color: var(--bg-color-opacity-light);
    position: fixed;
    inset: 0;
    z-index: -10;
  }

  .wallpaper picture {
    position: absolute;
    inset: 0;
    display: none;
  }

  .wallpaper picture.active {
    display: block;
  }

  .wallpaper-image {
    animation: var(--wallpaper-animation-name)
      var(--wallpaper-animation-duration) linear infinite;
    width: 100vw;
    height: 100vmax;
    object-fit: cover;
  }
</style>
